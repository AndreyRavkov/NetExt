name: Deploy package to nuget server

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: "Choose the package"
        required: true
        type: choice
        options:
          - 'NetExt.Awaiter'
          - 'NetExt.DateTime'
          - 'NetExt.MayBe'
          - 'NetExt.Models'
          - 'NetExt.Require'
          - 'NetExt.Strings'
          - 'NetExt.Utils'

env:
  NUGET_SOURCE: https://api.nuget.org/v3/index.json
  TESTS_PROJ_PATH: ./tests/NextExt.UnitTests/NextExt.UnitTests.csproj

permissions:
  contents: write

jobs:
  job-verification:
    runs-on: ubuntu-latest
    steps:
      - name: Check Main Branch
        run: |
           if [[ "${{ github.ref_name }}" != "main" ]]; then
             echo "This workflow can only be triggered on the 'main' branch."
             exit 1
           fi
      - name: Check Repository Owner
        run: |
          if [[ "${{ github.actor }}" != "${{ github.repository_owner }}" ]]; then
            echo "Unauthorized: Only the repository owner (${ github.repository_owner }) can trigger this workflow."
            exit 1
          fi

  job-tests:
    needs: job-verification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            9.x.x
            8.x.x
            7.x.x
            6.x.x
      - name: Run Tests
        run: dotnet test $TESTS_PROJ_PATH -c Release

  NetExt_Awaiter:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.Awaiter' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.Awaiter/NetExt.Awaiter.csproj'

  NetExt_DateTime:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.DateTime' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.DateTime/NetExt.DateTime.csproj'

  NetExt_MayBe:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.MayBe' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.MayBe/NetExt.MayBe.csproj'

  NetExt_Models:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.Models' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.Models/NetExt.Models.csproj'
      

  NetExt_Require:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.Require' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.Require/NetExt.Require.csproj'
      

  NetExt_Strings:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.Strings' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.Strings/NetExt.Strings.csproj'
  
  NetExt_Utils:
    needs: job-tests
    uses: ./.github/workflows/deploy-package-flow.yml
    if: ${{ inputs.package_name == 'NetExt.Utils' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    with:
      project_path: './src/NetExt.Utils/NetExt.Utils.csproj'